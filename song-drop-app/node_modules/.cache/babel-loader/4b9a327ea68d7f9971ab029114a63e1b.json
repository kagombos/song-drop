{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\song-drop\\\\song-drop-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport './App.css';\nimport PlayRateSlider from './control-sliders/PlayRateSlider';\nimport VolumeSlider from './control-sliders/VolumeSlider';\nimport PlayBackSlider from './control-sliders/PlayBackSlider';\nimport Upload from './Upload';\nimport TrackList from './track-list/TrackList';\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volume: 0,\n      playRate: 0,\n      pitch: 0,\n      playedQueue: null,\n      unplayedQueue: null,\n      requestCompleted: false,\n      playBackPos: 0,\n      duration: 0\n    };\n    this.source = audioContext.createBufferSource();\n    this.buttonLabel = 'Begin';\n    this.gainNode = audioContext.createGain();\n    this.gainNode.connect(audioContext.destination);\n    console.log(audioContext);\n    this.getSound();\n    this.playing = false;\n    this.togglePlay = this.togglePlay.bind(this);\n  }\n\n  smoothAlgorithm(val) {\n    return Math.pow(val / 100, Math.log(10) / Math.log(2));\n  }\n\n  getSound() {\n    this.source = audioContext.createBufferSource();\n    var url = \"http://172.18.86.35:5001/sound\";\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    var a = this;\n\n    this.source.onended = function () {\n      a.getSound();\n    };\n\n    request.onload = () => {\n      audioContext.decodeAudioData(request.response).then(function (data) {\n        a.source.buffer = data;\n        a.source.playbackRate.value = a.smoothAlgorithm(a.state.playRate);\n        a.source.connect(a.gainNode);\n        a.source.start(0);\n      }, e => {\n        console.log(e);\n      });\n    };\n\n    request.send();\n  }\n\n  togglePlay() {\n    var url = \"http://172.18.86.35:5001/togglepause\";\n    this.playing = !this.playing;\n    this.playSoundLoop();\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.send();\n    console.log(\"toggled pause\");\n  }\n\n  playSoundLoop() {\n    var elem = document.getElementById(\"toggleButton\");\n\n    if (this.playing) {\n      audioContext.resume();\n      elem.innerHTML = 'Stop';\n    } else {\n      audioContext.suspend();\n      elem.innerHTML = 'Start';\n    }\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n\n      if (dataFromServer.volume !== undefined) {\n        this.setState({\n          volume: dataFromServer.volume\n        });\n      }\n\n      if (dataFromServer.playRate !== undefined) {\n        this.setState({\n          playRate: dataFromServer.playRate\n        });\n      }\n\n      if (dataFromServer.playedQueue !== undefined) {\n        this.setState({\n          playedQueue: dataFromServer.playedQueue\n        });\n      }\n\n      if (dataFromServer.unplayedQueue !== undefined) {\n        this.setState({\n          unplayedQueue: dataFromServer.unplayedQueue\n        });\n      }\n\n      if (dataFromServer.playBackPos !== undefined) {\n        this.setState({\n          playBackPos: dataFromServer.playBackPos\n        });\n      }\n\n      if (dataFromServer.duration !== undefined) {\n        this.setState({\n          duration: dataFromServer.duration\n        });\n      }\n\n      this.setState({\n        requestCompleted: true\n      });\n    };\n  }\n\n  render() {\n    if (this.state.requestCompleted) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(VolumeSlider, {\n        gainNode: this.gainNode,\n        volume: this.state.volume,\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          top: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(PlayBackSlider, {\n        playBackPos: this.state.playBackPos,\n        duration: this.state.duration,\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"toggleButton\",\n        type: \"button\",\n        onClick: (e, val) => {\n          this.togglePlay();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Begin\"))), React.createElement(\"div\", {\n        className: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(TrackList, {\n        playedQueue: this.state.playedQueue,\n        unplayedQueue: this.state.unplayedQueue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/song-drop/song-drop-app/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","PlayRateSlider","VolumeSlider","PlayBackSlider","Upload","TrackList","AudioContext","window","webkitAudioContext","audioContext","client","App","constructor","props","state","volume","playRate","pitch","playedQueue","unplayedQueue","requestCompleted","playBackPos","duration","source","createBufferSource","buttonLabel","gainNode","createGain","connect","destination","console","log","getSound","playing","togglePlay","bind","smoothAlgorithm","val","Math","pow","url","request","XMLHttpRequest","open","responseType","a","onended","onload","decodeAudioData","response","then","data","buffer","playbackRate","value","start","e","send","playSoundLoop","elem","document","getElementById","resume","innerHTML","suspend","componentDidMount","onopen","onmessage","message","dataFromServer","JSON","parse","undefined","setState","render","position","top"],"mappings":"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","sourcesContent":["// src/App.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport './App.css';\r\n\r\nimport PlayRateSlider from './control-sliders/PlayRateSlider';\r\nimport VolumeSlider from './control-sliders/VolumeSlider';\r\nimport PlayBackSlider from './control-sliders/PlayBackSlider';\r\nimport Upload from './Upload';\r\nimport TrackList from './track-list/TrackList';\r\n\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\r\nconst audioContext = new AudioContext();\r\n\r\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\r\n\r\nclass App extends Component {\r\n\t\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tvolume: 0,\r\n    \tplayRate: 0,\r\n    \tpitch: 0,\r\n    \tplayedQueue: null,\r\n    \tunplayedQueue: null,\r\n    \trequestCompleted: false,\r\n    \tplayBackPos: 0,\r\n    \tduration: 0\r\n    };\r\n    \r\n    this.source = audioContext.createBufferSource();\r\n    this.buttonLabel = 'Begin';\r\n    \r\n    this.gainNode = audioContext.createGain();\r\n    this.gainNode.connect(audioContext.destination);\r\n    \r\n    console.log(audioContext);\r\n    \r\n    this.getSound();\r\n    \r\n    this.playing = false;\r\n    \r\n    this.togglePlay = this.togglePlay.bind(this);\r\n  }\r\n  \r\n  smoothAlgorithm(val) {\r\n\treturn Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n  }\r\n  \r\n  getSound() {\r\n\t  this.source = audioContext.createBufferSource();\r\n\t  \r\n\t  var url = \"http://172.18.86.35:5001/sound\"\r\n      var request = new XMLHttpRequest();\r\n\t  request.open(\"GET\", url, true);\r\n\t  request.responseType = \"arraybuffer\";\r\n\t  var a = this;\r\n\t  \r\n\t  this.source.onended = function() {\r\n    \ta.getSound();\r\n      }\r\n\t  request.onload = () => {\r\n\t\t  audioContext.decodeAudioData(request.response).then(function (data) {\r\n\t\t\t  a.source.buffer = data;\r\n\t\t\t  a.source.playbackRate.value = a.smoothAlgorithm(a.state.playRate);\r\n\t\t\t  a.source.connect(a.gainNode);\r\n\t\t\t  a.source.start(0);\r\n\t\t  }, (e) => { console.log(e); });\r\n  \t  }\r\n\t  request.send();\r\n  }\r\n  \r\n  togglePlay() {\r\n\t  var url = \"http://172.18.86.35:5001/togglepause\"\r\n\t  this.playing = !this.playing;\r\n\t  this.playSoundLoop();\r\n\t  var request = new XMLHttpRequest();\r\n\t  request.open(\"GET\", url, true);\r\n\t  request.send();\r\n\t  console.log(\"toggled pause\");\r\n  }\r\n  \r\n  playSoundLoop() {\r\n\tvar elem = document.getElementById(\"toggleButton\");\r\n\tif (this.playing) {\r\n\t\taudioContext.resume();\r\n\t\telem.innerHTML = 'Stop';\r\n\t}\r\n\telse {\r\n\t\taudioContext.suspend();\r\n\t\telem.innerHTML = 'Start';\r\n\t}\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t  client.onopen = () => {\r\n\t   console.log('WebSocket Client Connected');\r\n\t  };\r\n\t  client.onmessage = (message) => {\r\n\t    const dataFromServer = JSON.parse(message.data);\r\n\t    if (dataFromServer.volume !== undefined) {\r\n\t    \tthis.setState({ volume: dataFromServer.volume });\t    \t\r\n\t    }\r\n\t    if (dataFromServer.playRate !== undefined) {\r\n\t    \tthis.setState({ playRate: dataFromServer.playRate });\t    \t\r\n\t    }\r\n\t    if (dataFromServer.playedQueue !== undefined) {\r\n\t    \tthis.setState({ playedQueue: dataFromServer.playedQueue });    \t\r\n\t    }\r\n\t    if (dataFromServer.unplayedQueue !== undefined) {\r\n\t    \tthis.setState({ unplayedQueue: dataFromServer.unplayedQueue });    \t\r\n\t    }\r\n\t    if (dataFromServer.playBackPos !== undefined) {\r\n\t    \tthis.setState({ playBackPos: dataFromServer.playBackPos });\t    \t\r\n\t    }\r\n\t    if (dataFromServer.duration !== undefined) {\r\n\t    \tthis.setState({ duration: dataFromServer.duration });\r\n\t    }\r\n\t    this.setState({ requestCompleted: true });\r\n\t  };\r\n\t}  \r\n  \r\n  render() {\r\n\tif (this.state.requestCompleted) {\r\n\t\treturn (\r\n\t      <div className=\"App\">\r\n\t        <center>\r\n\t          <VolumeSlider gainNode={this.gainNode} volume={this.state.volume} client={client}/>\r\n\t          <div style={{position: \"relative\", top: \"90%\"}}>\r\n\t          \t<PlayBackSlider playBackPos={this.state.playBackPos} duration={this.state.duration} client={client}/>\r\n\t          \t<button id=\"toggleButton\" type=\"button\" onClick={(e, val) => { this.togglePlay(); }}>Begin</button>\r\n\t          </div>\r\n\t        </center>\r\n\t        <div className=\"Upload\">\r\n\t          <Upload />\r\n\t        </div>\r\n\t        <TrackList playedQueue={this.state.playedQueue} unplayedQueue={this.state.unplayedQueue}/>\r\n\t      </div>\r\n\t    );\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<div>Loading...</div>\r\n\t\t)\r\n\t}\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}