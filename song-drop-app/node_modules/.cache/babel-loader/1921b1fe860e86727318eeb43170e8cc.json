{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\song-drop\\\\song-drop-app\\\\src\\\\control-sliders\\\\VolumeSlider.js\";\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\n\nclass VolumeSlider extends Component {\n  constructor() {\n    super();\n    this.lastTime = now();\n  }\n\n  componentDidUpdate() {\n    this.handleVolumeChange(this.props.volume);\n  }\n\n  smoothAlgorithm(val) {\n    return Math.pow(val / 100, Math.log(10) / Math.log(2));\n  }\n\n  onVolumeStateChange(val) {\n    this.setState({\n      volume: val\n    }, () => {\n      this.props.client.send(JSON.stringify({\n        volume: this.state.volume\n      }));\n    });\n  }\n\n  handleVolumeChange(volume) {\n    this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    }; //this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\n\n    return React.createElement(\"div\", {\n      className: \"VolumeSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Volume\"), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        if (this.lastTime - now() > 200) {\n          this.onVolumeStateChange(val);\n          this.lastTime = now();\n        }\n      },\n      onChangeCommitted: (e, val) => {\n        this.onVolumeStateChange(val);\n      },\n      min: 0,\n      max: 200,\n      value: this.props.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default VolumeSlider;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/song-drop/song-drop-app/src/control-sliders/VolumeSlider.js"],"names":["React","Component","Slider","VolumeSlider","constructor","lastTime","now","componentDidUpdate","handleVolumeChange","props","volume","smoothAlgorithm","val","Math","pow","log","onVolumeStateChange","setState","client","send","JSON","stringify","state","gainNode","gain","value","render","sliderStyle","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEpCG,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgBC,GAAG,EAAnB;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,MAAnC;AACA;;AAEDC,EAAAA,eAAe,CAACC,GAAD,EAAM;AACnB,WAAOC,IAAI,CAACC,GAAL,CAAUF,GAAG,GAAG,GAAhB,EAAuBC,IAAI,CAACE,GAAL,CAAS,EAAT,IAAeF,IAAI,CAACE,GAAL,CAAS,CAAT,CAAtC,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAACJ,GAAD,EAAM;AACxB,SAAKK,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEE;AAAV,KAAd,EAA+B,MAAM;AAAE,WAAKH,KAAL,CAAWS,MAAX,CAAkBC,IAAlB,CAAuBC,IAAI,CAACC,SAAL,CAAe;AAACX,QAAAA,MAAM,EAAE,KAAKY,KAAL,CAAWZ;AAApB,OAAf,CAAvB;AAAsE,KAA7G;AACA;;AAEEF,EAAAA,kBAAkB,CAACE,MAAD,EAAS;AAC1B,SAAKD,KAAL,CAAWc,QAAX,CAAoBC,IAApB,CAAyBC,KAAzB,GAAiC,KAAKd,eAAL,CAAqBD,MAArB,CAAjC;AACA;;AAEJgB,EAAAA,MAAM,GAAG;AACR,UAAMC,WAAW,GAAG;AAClB,oBAAc,KADI;AAElB,qBAAe;AAFG,KAApB,CADQ,CAKR;;AACA,WACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,MAAA,KAAK,EAAEA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,QAAX;AACE,MAAA,QAAQ,EAAE,CAACC,CAAD,EAAIhB,GAAJ,KAAY;AACrB,YAAI,KAAKP,QAAL,GAAgBC,GAAG,EAAnB,GAAwB,GAA5B,EAAiC;AAChC,eAAKU,mBAAL,CAAyBJ,GAAzB;AACA,eAAKP,QAAL,GAAgBC,GAAG,EAAnB;AACA;AACD,OANH;AAOE,MAAA,iBAAiB,EAAE,CAACsB,CAAD,EAAIhB,GAAJ,KAAY;AAC9B,aAAKI,mBAAL,CAAyBJ,GAAzB;AACA,OATH;AAUE,MAAA,GAAG,EAAE,CAVP;AAWG,MAAA,GAAG,EAAE,GAXR;AAYE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,MAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFF,CADA;AAqBA;;AAlDmC;;AAqDrC,eAAeP,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Slider } from '@material-ui/core';\r\n\r\nclass VolumeSlider extends Component {\r\n\t\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.lastTime = now();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleVolumeChange(this.props.volume);\r\n\t}\r\n\t\r\n\tsmoothAlgorithm(val) {\r\n\t  return Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n\t}\r\n\t\r\n\tonVolumeStateChange(val) {\r\n\t\tthis.setState({ volume: val }, () => { this.props.client.send(JSON.stringify({volume: this.state.volume})); });    \r\n\t}\r\n\t\r\n    handleVolumeChange(volume) {\r\n    \tthis.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst sliderStyle = {\r\n\t\t  'marginLeft': '25%',\r\n\t\t  'marginRight': '25%',\r\n\t\t};\r\n\t\t//this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n\t\treturn (\r\n\t\t<div className=\"VolumeSlider\">\r\n\t\t  <p>Volume</p>\r\n\t\t  <div style={sliderStyle}>\r\n\t\t  \t<Slider id=\"slider\" \r\n\t\t  \t  onChange={(e, val) => {\r\n\t\t  \t\t  if (this.lastTime - now() > 200) {\r\n\t\t  \t\t\t  this.onVolumeStateChange(val);\r\n\t\t  \t\t\t  this.lastTime = now();\r\n\t\t  \t\t  }\r\n\t\t  \t  }}\r\n\t\t  \t  onChangeCommitted={(e, val) => {\r\n\t\t  \t\t  this.onVolumeStateChange(val);\r\n\t\t  \t  }}\r\n\t\t  \t  min={0}\r\n\t\t      max={200}\r\n\t\t  \t  value={this.props.volume}\r\n\t\t  \t/>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default VolumeSlider;"]},"metadata":{},"sourceType":"module"}